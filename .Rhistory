"Sample_24_with_DF", "Sample_55_with_DF", "Sample_59_with_DF", "Sample_63_with_DF")
rs_columns <- c("Sample_03", "Sample_08", "Sample_13", "Sample_42", "Sample_47",
"Sample_52", "Sample_29", "Sample_33", "Sample_37", "Sample_68",
"Sample_72", "Sample_76", "Sample_17", "Sample_21", "Sample_25",
"Sample_56", "Sample_60", "Sample_64",
"Sample_03_with_DF", "Sample_08_with_DF", "Sample_13_with_DF", "Sample_42_with_DF", "Sample_47_with_DF",
"Sample_52_with_DF", "Sample_29_with_DF", "Sample_33_with_DF", "Sample_37_with_DF", "Sample_68_with_DF",
"Sample_72_with_DF", "Sample_76_with_DF", "Sample_17_with_DF", "Sample_21_with_DF", "Sample_25_with_DF",
"Sample_56_with_DF", "Sample_60_with_DF", "Sample_64_with_DF")
ms_columns <- c("Sample_04", "Sample_09", "Sample_14", "Sample_43", "Sample_48",
"Sample_53", "Sample_30", "Sample_34", "Sample_38", "Sample_69",
"Sample_73", "Sample_77", "Sample_18", "Sample_22", "Sample_26",
"Sample_57", "Sample_61", "Sample_65",
"Sample_04_with_DF", "Sample_09_with_DF", "Sample_14_with_DF", "Sample_43_with_DF", "Sample_48_with_DF",
"Sample_53_with_DF", "Sample_30_with_DF", "Sample_34_with_DF", "Sample_38_with_DF", "Sample_69_with_DF",
"Sample_73_with_DF", "Sample_77_with_DF", "Sample_18_with_DF", "Sample_22_with_DF", "Sample_26_with_DF",
"Sample_57_with_DF", "Sample_61_with_DF", "Sample_65_with_DF")
btp_columns <- c("Sample_05", "Sample_10", "Sample_15", "Sample_44", "Sample_49",
"Sample_54", "Sample_31", "Sample_35", "Sample_39", "Sample_70",
"Sample_74", "Sample_78", "Sample_19", "Sample_23", "Sample_27",
"Sample_58", "Sample_62", "Sample_66",
"Sample_05_with_DF", "Sample_10_with_DF", "Sample_15_with_DF", "Sample_44_with_DF", "Sample_49_with_DF",
"Sample_54_with_DF", "Sample_31_with_DF", "Sample_35_with_DF", "Sample_39_with_DF", "Sample_70_with_DF",
"Sample_74_with_DF", "Sample_78_with_DF", "Sample_19_with_DF", "Sample_23_with_DF", "Sample_27_with_DF",
"Sample_58_with_DF", "Sample_62_with_DF", "Sample_66_with_DF")
# Define the column patterns for DK, SP, and UK groups
dk_columns <- c("Sample_01", "Sample_02", "Sample_03", "Sample_04", "Sample_06",
"Sample_07", "Sample_08", "Sample_09", "Sample_11", "Sample_12",
"Sample_13", "Sample_14", "Sample_40", "Sample_41", "Sample_42",
"Sample_43", "Sample_45", "Sample_46", "Sample_47", "Sample_48",
"Sample_50", "Sample_51", "Sample_52", "Sample_53", "Sample_05",
"Sample_10", "Sample_15", "Sample_44", "Sample_49", "Sample_54",
"Sample_01_with_DF", "Sample_02_with_DF", "Sample_03_with_DF", "Sample_04_with_DF", "Sample_06_with_DF",
"Sample_07_with_DF", "Sample_08_with_DF", "Sample_09_with_DF", "Sample_11_with_DF", "Sample_12_with_DF",
"Sample_13_with_DF", "Sample_14_with_DF", "Sample_40_with_DF", "Sample_41_with_DF", "Sample_42_with_DF",
"Sample_43_with_DF", "Sample_45_with_DF", "Sample_46_with_DF", "Sample_47_with_DF", "Sample_48_with_DF",
"Sample_50_with_DF", "Sample_51_with_DF", "Sample_52_with_DF", "Sample_53_with_DF", "Sample_05_with_DF",
"Sample_10_with_DF", "Sample_15_with_DF", "Sample_44_with_DF", "Sample_49_with_DF", "Sample_54_with_DF")
sp_columns <- c("Sample_28", "Sample_29", "Sample_30", "Sample_32", "Sample_33",
"Sample_34", "Sample_36", "Sample_37", "Sample_38", "Sample_67",
"Sample_68", "Sample_69", "Sample_71", "Sample_72", "Sample_73",
"Sample_75", "Sample_76", "Sample_77", "Sample_31", "Sample_35",
"Sample_39", "Sample_70", "Sample_74", "Sample_78",
"Sample_28_with_DF", "Sample_29_with_DF", "Sample_30_with_DF", "Sample_32_with_DF", "Sample_33_with_DF",
"Sample_34_with_DF", "Sample_36_with_DF", "Sample_37_with_DF", "Sample_38_with_DF", "Sample_67_with_DF",
"Sample_68_with_DF", "Sample_69_with_DF", "Sample_71_with_DF", "Sample_72_with_DF", "Sample_73_with_DF",
"Sample_75_with_DF", "Sample_76_with_DF", "Sample_77_with_DF", "Sample_31_with_DF", "Sample_35_with_DF",
"Sample_39_with_DF", "Sample_70_with_DF", "Sample_74_with_DF", "Sample_78_with_DF")
uk_columns <- c("Sample_16", "Sample_17", "Sample_18", "Sample_20", "Sample_21",
"Sample_22", "Sample_24", "Sample_25", "Sample_26", "Sample_55",
"Sample_56", "Sample_57", "Sample_59", "Sample_60", "Sample_61",
"Sample_63", "Sample_64", "Sample_65", "Sample_19", "Sample_23",
"Sample_27", "Sample_58", "Sample_62", "Sample_66",
"Sample_16_with_DF", "Sample_17_with_DF", "Sample_18_with_DF", "Sample_20_with_DF", "Sample_21_with_DF",
"Sample_22_with_DF", "Sample_24_with_DF", "Sample_25_with_DF", "Sample_26_with_DF", "Sample_55_with_DF",
"Sample_56_with_DF", "Sample_57_with_DF", "Sample_59_with_DF", "Sample_60_with_DF", "Sample_61_with_DF",
"Sample_63_with_DF", "Sample_64_with_DF", "Sample_65_with_DF", "Sample_19_with_DF", "Sample_23_with_DF",
"Sample_27_with_DF", "Sample_58_with_DF", "Sample_62_with_DF", "Sample_66_with_DF")
# Load the data
data <- read.csv(file_path, header = TRUE, row.names = 1)
# Remove columns with all zeros
data <- data[, colSums(data != 0) > 0]
# Separate the groups based on predefined columns
group_hp <- data[, colnames(data) %in% hp_columns]
group_rs <- data[, colnames(data) %in% rs_columns]
group_ms <- data[, colnames(data) %in% ms_columns]
group_btp <- data[, colnames(data) %in% btp_columns]
# Combine groups for analysis
combined_data <- cbind(group_hp, group_rs, group_ms, group_btp)
# Transpose the data to have samples as rows
combined_data_t <- t(combined_data)
# Perform NMDS
nmds <- metaMDS(combined_data_t, distance = "bray", k = 2, trymax = 100)
# Extract NMDS scores (site scores)
nmds_scores <- as.data.frame(scores(nmds, display = "sites"))
# Add group information
nmds_scores$group <- rep(c("HP", "RS", "MS", "BTP"),
c(ncol(group_hp), ncol(group_rs), ncol(group_ms), ncol(group_btp)))
# Add country information
nmds_scores$country <- rep("", nrow(nmds_scores))
nmds_scores$country[rownames(nmds_scores) %in% dk_columns] <- "DK"
nmds_scores$country[rownames(nmds_scores) %in% sp_columns] <- "SP"
nmds_scores$country[rownames(nmds_scores) %in% uk_columns] <- "UK"
# Add whole_columns and whole_columns_with_df information
nmds_scores$whole <- ifelse(rownames(nmds_scores) %in% whole_columns, "whole_columns", "whole_columns_with_df")
# Function to generate ellipse points for confidence intervals
veganCovEllipse <- function(cov, center, scale) {
library(MASS)
angles <- seq(0, 2 * pi, length.out = 100)
unit_circle <- cbind(cos(angles), sin(angles))
ellipse <- t(center + scale * t(unit_circle %*% chol(cov)))
return(data.frame(NMDS1 = ellipse[,1], NMDS2 = ellipse[,2]))
}
# Calculate confidence ellipses
ellipse_list <- list()
for (g in unique(nmds_scores$group)) {
for (w in unique(nmds_scores$whole)) {
group_data <- nmds_scores[nmds_scores$group == g & nmds_scores$whole == w, c("NMDS1", "NMDS2")]
if (nrow(group_data) > 2) {  # Ensure there are enough points to calculate ellipse
ell <- data.frame(veganCovEllipse(cov(group_data), center = colMeans(group_data), scale = 0.95))
ell$group <- g
ell$whole <- w
ellipse_list[[paste(g, w, sep = "_")]] <- ell
}
}
}
conf_intervals <- do.call(rbind, ellipse_list)
# Perform ANOSIM
group_factor <- factor(nmds_scores$group)
anosim_result <- anosim(combined_data_t, group_factor, distance = "bray")
# Create annotation text for ANOSIM results
anosim_text <- paste("ANOSIM R:", round(anosim_result$statistic, 3), "\np-value:", format(anosim_result$signif, scientific = TRUE))
# Plot NMDS
nmds_plot <- ggplot() +
# Add points
geom_point(data = nmds_scores, aes(x = NMDS1, y = NMDS2, color = whole, shape = country), size = 3) +
# Add confidence ellipses
geom_path(data = conf_intervals, aes(x = NMDS1, y = NMDS2, color = whole, group = interaction(group, whole)), linetype = 2) +
scale_color_manual(values = c("whole_columns" = "#6566aa", "whole_columns_with_df" = "#dc5772"),
name = "Whole",
breaks = c("whole_columns", "whole_columns_with_df")) +
scale_shape_manual(values = c("DK" = 21, "SP" = 22, "UK" = 23), name = "Country") +
theme_bw() +
labs(x = "NMDS1", y = "NMDS2") +
annotate("text", x = min(nmds_scores$NMDS1), y = max(nmds_scores$NMDS2),
label = anosim_text, hjust = 0, vjust = 1, size = 6, fontface = "bold") +
theme(
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size = 12, face = "italic"),
axis.text.y = element_text(size = 12, face = "italic")
)
# Save NMDS plot as PDF
ggsave("with_df_gtdb_phylum_nmds.pdf", plot = nmds_plot, device = "pdf", width = 9, height = 8)
# Load necessary libraries
library(ggplot2)
library(vegan)
# Set the file path
file_path <- "with_df_gtdb_phylum_merged_all.csv"
whole_columns <- c("Sample_01", "Sample_02", "Sample_03", "Sample_04", "Sample_05", "Sample_06", "Sample_07", "Sample_08", "Sample_09", "Sample_10", "Sample_11", "Sample_12", "Sample_13", "Sample_14", "Sample_15", "Sample_16", "Sample_17", "Sample_18", "Sample_19", "Sample_20", "Sample_21", "Sample_22", "Sample_23", "Sample_24", "Sample_25", "Sample_26", "Sample_27", "Sample_28", "Sample_29", "Sample_30", "Sample_31", "Sample_32", "Sample_33", "Sample_34", "Sample_35", "Sample_36", "Sample_37", "Sample_38", "Sample_39", "Sample_40", "Sample_41", "Sample_42", "Sample_43", "Sample_44", "Sample_45", "Sample_46", "Sample_47", "Sample_48", "Sample_49", "Sample_50", "Sample_51", "Sample_52", "Sample_53", "Sample_54", "Sample_55", "Sample_56", "Sample_57", "Sample_58", "Sample_59", "Sample_60", "Sample_61", "Sample_62", "Sample_63", "Sample_64", "Sample_65", "Sample_66", "Sample_67", "Sample_68", "Sample_69", "Sample_70", "Sample_71", "Sample_72", "Sample_73", "Sample_74", "Sample_75", "Sample_76", "Sample_77", "Sample_78")
whole_columns_with_df <- c(paste0(whole_columns, "_with_DF"))
# Define the column patterns for HP, RS, MS, and BTP groups
hp_columns <- c("Sample_01", "Sample_02", "Sample_06", "Sample_07", "Sample_11",
"Sample_12", "Sample_40", "Sample_41", "Sample_45", "Sample_46",
"Sample_50", "Sample_51", "Sample_28", "Sample_32", "Sample_36",
"Sample_67", "Sample_71", "Sample_75", "Sample_16", "Sample_20",
"Sample_24", "Sample_55", "Sample_59", "Sample_63",
"Sample_01_with_DF", "Sample_02_with_DF", "Sample_06_with_DF", "Sample_07_with_DF", "Sample_11_with_DF",
"Sample_12_with_DF", "Sample_40_with_DF", "Sample_41_with_DF", "Sample_45_with_DF", "Sample_46_with_DF",
"Sample_50_with_DF", "Sample_51_with_DF", "Sample_28_with_DF", "Sample_32_with_DF", "Sample_36_with_DF",
"Sample_67_with_DF", "Sample_71_with_DF", "Sample_75_with_DF", "Sample_16_with_DF", "Sample_20_with_DF",
"Sample_24_with_DF", "Sample_55_with_DF", "Sample_59_with_DF", "Sample_63_with_DF")
rs_columns <- c("Sample_03", "Sample_08", "Sample_13", "Sample_42", "Sample_47",
"Sample_52", "Sample_29", "Sample_33", "Sample_37", "Sample_68",
"Sample_72", "Sample_76", "Sample_17", "Sample_21", "Sample_25",
"Sample_56", "Sample_60", "Sample_64",
"Sample_03_with_DF", "Sample_08_with_DF", "Sample_13_with_DF", "Sample_42_with_DF", "Sample_47_with_DF",
"Sample_52_with_DF", "Sample_29_with_DF", "Sample_33_with_DF", "Sample_37_with_DF", "Sample_68_with_DF",
"Sample_72_with_DF", "Sample_76_with_DF", "Sample_17_with_DF", "Sample_21_with_DF", "Sample_25_with_DF",
"Sample_56_with_DF", "Sample_60_with_DF", "Sample_64_with_DF")
ms_columns <- c("Sample_04", "Sample_09", "Sample_14", "Sample_43", "Sample_48",
"Sample_53", "Sample_30", "Sample_34", "Sample_38", "Sample_69",
"Sample_73", "Sample_77", "Sample_18", "Sample_22", "Sample_26",
"Sample_57", "Sample_61", "Sample_65",
"Sample_04_with_DF", "Sample_09_with_DF", "Sample_14_with_DF", "Sample_43_with_DF", "Sample_48_with_DF",
"Sample_53_with_DF", "Sample_30_with_DF", "Sample_34_with_DF", "Sample_38_with_DF", "Sample_69_with_DF",
"Sample_73_with_DF", "Sample_77_with_DF", "Sample_18_with_DF", "Sample_22_with_DF", "Sample_26_with_DF",
"Sample_57_with_DF", "Sample_61_with_DF", "Sample_65_with_DF")
btp_columns <- c("Sample_05", "Sample_10", "Sample_15", "Sample_44", "Sample_49",
"Sample_54", "Sample_31", "Sample_35", "Sample_39", "Sample_70",
"Sample_74", "Sample_78", "Sample_19", "Sample_23", "Sample_27",
"Sample_58", "Sample_62", "Sample_66",
"Sample_05_with_DF", "Sample_10_with_DF", "Sample_15_with_DF", "Sample_44_with_DF", "Sample_49_with_DF",
"Sample_54_with_DF", "Sample_31_with_DF", "Sample_35_with_DF", "Sample_39_with_DF", "Sample_70_with_DF",
"Sample_74_with_DF", "Sample_78_with_DF", "Sample_19_with_DF", "Sample_23_with_DF", "Sample_27_with_DF",
"Sample_58_with_DF", "Sample_62_with_DF", "Sample_66_with_DF")
# Load the data
data <- read.csv(file_path, header = TRUE, row.names = 1)
# Remove columns with all zeros
data <- data[, colSums(data != 0) > 0]
# Separate the groups based on predefined columns
group_hp <- data[, colnames(data) %in% hp_columns]
group_rs <- data[, colnames(data) %in% rs_columns]
group_ms <- data[, colnames(data) %in% ms_columns]
group_btp <- data[, colnames(data) %in% btp_columns]
# Combine groups for analysis
combined_data <- cbind(group_hp, group_rs, group_ms, group_btp)
# Transpose the data to have samples as rows
combined_data_t <- t(combined_data)
# Perform NMDS
nmds <- metaMDS(combined_data_t, distance = "bray", k = 2, trymax = 100)
# Extract NMDS scores (site scores)
nmds_scores <- as.data.frame(scores(nmds, display = "sites"))
# Add group information
nmds_scores$group <- rep(c("HP", "RS", "MS", "BTP"),
c(ncol(group_hp), ncol(group_rs), ncol(group_ms), ncol(group_btp)))
# Add point shape information
nmds_scores$point_shape <- ifelse(rownames(nmds_scores) %in% hp_columns, "HP",
ifelse(rownames(nmds_scores) %in% rs_columns, "RS",
ifelse(rownames(nmds_scores) %in% ms_columns, "MS", "BTP")))
# Define point shapes (hollow for HP, RS, MS; solid for BTP)
shape_mapping <- c("HP" = 21, "RS" = 21, "MS" = 21, "BTP" = 19)
# Perform ANOSIM
group_factor <- factor(nmds_scores$group)
anosim_result <- anosim(combined_data_t, group_factor, distance = "bray")
# Create annotation text for ANOSIM results
anosim_text <- paste("ANOSIM R:", round(anosim_result$statistic, 3), "\np-value:", format(anosim_result$signif, scientific = TRUE))
# Plot NMDS
nmds_plot <- ggplot() +
# Add points with shape and color mappings
geom_point(data = nmds_scores, aes(x = NMDS1, y = NMDS2, shape = point_shape, color = whole), size = 3) +
# Add confidence ellipses
geom_path(data = conf_intervals, aes(x = NMDS1, y = NMDS2, color = whole, group = interaction(group, whole)), linetype = 2) +
scale_color_manual(values = c("whole_columns" = "#6566aa", "whole_columns_with_df" = "#dc5772"),
name = "Whole",
breaks = c("whole_columns", "whole_columns_with_df")) +
scale_shape_manual(values = shape_mapping, name = "Group") +
theme_bw() +
labs(x = "NMDS1", y = "NMDS2") +
annotate("text", x = min(nmds_scores$NMDS1), y = max(nmds_scores$NMDS2),
label = anosim_text, hjust = 0, vjust = 1, size = 6, fontface = "bold") +
theme(
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size = 12, face = "italic"),
axis.text.y = element_text(size = 12, face = "italic"),
legend.title = element_text(size = 12, face = "bold"),
legend.text = element_text(size = 10)
)
# Save NMDS plot as PDF
ggsave("with_df_gtdb_phylum_nmds.pdf", plot = nmds_plot, device = "pdf", width = 9, height = 8)
# Load necessary libraries
library(ggplot2)
library(vegan)
# Set the file path
file_path <- "with_df_gtdb_phylum_merged_all.csv"
whole_columns <- c("Sample_01", "Sample_02", "Sample_03", "Sample_04", "Sample_05", "Sample_06", "Sample_07", "Sample_08", "Sample_09", "Sample_10", "Sample_11", "Sample_12", "Sample_13", "Sample_14", "Sample_15", "Sample_16", "Sample_17", "Sample_18", "Sample_19", "Sample_20", "Sample_21", "Sample_22", "Sample_23", "Sample_24", "Sample_25", "Sample_26", "Sample_27", "Sample_28", "Sample_29", "Sample_30", "Sample_31", "Sample_32", "Sample_33", "Sample_34", "Sample_35", "Sample_36", "Sample_37", "Sample_38", "Sample_39", "Sample_40", "Sample_41", "Sample_42", "Sample_43", "Sample_44", "Sample_45", "Sample_46", "Sample_47", "Sample_48", "Sample_49", "Sample_50", "Sample_51", "Sample_52", "Sample_53", "Sample_54", "Sample_55", "Sample_56", "Sample_57", "Sample_58", "Sample_59", "Sample_60", "Sample_61", "Sample_62", "Sample_63", "Sample_64", "Sample_65", "Sample_66", "Sample_67", "Sample_68", "Sample_69", "Sample_70", "Sample_71", "Sample_72", "Sample_73", "Sample_74", "Sample_75", "Sample_76", "Sample_77", "Sample_78")
whole_columns_with_df <- c(paste0(whole_columns, "_with_DF"))
# Define the column patterns for HP, RS, MS, and BTP groups
hp_columns <- c("Sample_01", "Sample_02", "Sample_06", "Sample_07", "Sample_11",
"Sample_12", "Sample_40", "Sample_41", "Sample_45", "Sample_46",
"Sample_50", "Sample_51", "Sample_28", "Sample_32", "Sample_36",
"Sample_67", "Sample_71", "Sample_75", "Sample_16", "Sample_20",
"Sample_24", "Sample_55", "Sample_59", "Sample_63",
"Sample_01_with_DF", "Sample_02_with_DF", "Sample_06_with_DF", "Sample_07_with_DF", "Sample_11_with_DF",
"Sample_12_with_DF", "Sample_40_with_DF", "Sample_41_with_DF", "Sample_45_with_DF", "Sample_46_with_DF",
"Sample_50_with_DF", "Sample_51_with_DF", "Sample_28_with_DF", "Sample_32_with_DF", "Sample_36_with_DF",
"Sample_67_with_DF", "Sample_71_with_DF", "Sample_75_with_DF", "Sample_16_with_DF", "Sample_20_with_DF",
"Sample_24_with_DF", "Sample_55_with_DF", "Sample_59_with_DF", "Sample_63_with_DF")
rs_columns <- c("Sample_03", "Sample_08", "Sample_13", "Sample_42", "Sample_47",
"Sample_52", "Sample_29", "Sample_33", "Sample_37", "Sample_68",
"Sample_72", "Sample_76", "Sample_17", "Sample_21", "Sample_25",
"Sample_56", "Sample_60", "Sample_64",
"Sample_03_with_DF", "Sample_08_with_DF", "Sample_13_with_DF", "Sample_42_with_DF", "Sample_47_with_DF",
"Sample_52_with_DF", "Sample_29_with_DF", "Sample_33_with_DF", "Sample_37_with_DF", "Sample_68_with_DF",
"Sample_72_with_DF", "Sample_76_with_DF", "Sample_17_with_DF", "Sample_21_with_DF", "Sample_25_with_DF",
"Sample_56_with_DF", "Sample_60_with_DF", "Sample_64_with_DF")
ms_columns <- c("Sample_04", "Sample_09", "Sample_14", "Sample_43", "Sample_48",
"Sample_53", "Sample_30", "Sample_34", "Sample_38", "Sample_69",
"Sample_73", "Sample_77", "Sample_18", "Sample_22", "Sample_26",
"Sample_57", "Sample_61", "Sample_65",
"Sample_04_with_DF", "Sample_09_with_DF", "Sample_14_with_DF", "Sample_43_with_DF", "Sample_48_with_DF",
"Sample_53_with_DF", "Sample_30_with_DF", "Sample_34_with_DF", "Sample_38_with_DF", "Sample_69_with_DF",
"Sample_73_with_DF", "Sample_77_with_DF", "Sample_18_with_DF", "Sample_22_with_DF", "Sample_26_with_DF",
"Sample_57_with_DF", "Sample_61_with_DF", "Sample_65_with_DF")
btp_columns <- c("Sample_05", "Sample_10", "Sample_15", "Sample_44", "Sample_49",
"Sample_54", "Sample_31", "Sample_35", "Sample_39", "Sample_70",
"Sample_74", "Sample_78", "Sample_19", "Sample_23", "Sample_27",
"Sample_58", "Sample_62", "Sample_66",
"Sample_05_with_DF", "Sample_10_with_DF", "Sample_15_with_DF", "Sample_44_with_DF", "Sample_49_with_DF",
"Sample_54_with_DF", "Sample_31_with_DF", "Sample_35_with_DF", "Sample_39_with_DF", "Sample_70_with_DF",
"Sample_74_with_DF", "Sample_78_with_DF", "Sample_19_with_DF", "Sample_23_with_DF", "Sample_27_with_DF",
"Sample_58_with_DF", "Sample_62_with_DF", "Sample_66_with_DF")
# Load the data
data <- read.csv(file_path, header = TRUE, row.names = 1)
# Remove columns with all zeros
data <- data[, colSums(data != 0) > 0]
# Separate the groups based on predefined columns
group_hp <- data[, colnames(data) %in% hp_columns]
group_rs <- data[, colnames(data) %in% rs_columns]
group_ms <- data[, colnames(data) %in% ms_columns]
group_btp <- data[, colnames(data) %in% btp_columns]
# Combine groups for analysis
combined_data <- cbind(group_hp, group_rs, group_ms, group_btp)
# Transpose the data to have samples as rows
combined_data_t <- t(combined_data)
# Perform NMDS
nmds <- metaMDS(combined_data_t, distance = "bray", k = 2, trymax = 100)
# Extract NMDS scores (site scores)
nmds_scores <- as.data.frame(scores(nmds, display = "sites"))
# Add group information
nmds_scores$group <- rep(c("HP", "RS", "MS", "BTP"),
c(ncol(group_hp), ncol(group_rs), ncol(group_ms), ncol(group_btp)))
# Add country information
nmds_scores$whole <- ifelse(rownames(nmds_scores) %in% whole_columns, "whole_columns", "whole_columns_with_df")
nmds_plot
# Load necessary libraries
library(ggplot2)
library(vegan)
# Set the file path
file_path <- "with_df_gtdb_phylum_merged_all.csv"
whole_columns <- c("Sample_01", "Sample_02", "Sample_03", "Sample_04", "Sample_05", "Sample_06", "Sample_07", "Sample_08", "Sample_09", "Sample_10", "Sample_11", "Sample_12", "Sample_13", "Sample_14", "Sample_15", "Sample_16", "Sample_17", "Sample_18", "Sample_19", "Sample_20", "Sample_21", "Sample_22", "Sample_23", "Sample_24", "Sample_25", "Sample_26", "Sample_27", "Sample_28", "Sample_29", "Sample_30", "Sample_31", "Sample_32", "Sample_33", "Sample_34", "Sample_35", "Sample_36", "Sample_37", "Sample_38", "Sample_39", "Sample_40", "Sample_41", "Sample_42", "Sample_43", "Sample_44", "Sample_45", "Sample_46", "Sample_47", "Sample_48", "Sample_49", "Sample_50", "Sample_51", "Sample_52", "Sample_53", "Sample_54", "Sample_55", "Sample_56", "Sample_57", "Sample_58", "Sample_59", "Sample_60", "Sample_61", "Sample_62", "Sample_63", "Sample_64", "Sample_65", "Sample_66", "Sample_67", "Sample_68", "Sample_69", "Sample_70", "Sample_71", "Sample_72", "Sample_73", "Sample_74", "Sample_75", "Sample_76", "Sample_77", "Sample_78")
whole_columns_with_df <- c(paste0(whole_columns, "_with_DF"))
# Define the column patterns for HP, RS, MS, and BTP groups
hp_columns <- c("Sample_01", "Sample_02", "Sample_06", "Sample_07", "Sample_11",
"Sample_12", "Sample_40", "Sample_41", "Sample_45", "Sample_46",
"Sample_50", "Sample_51", "Sample_28", "Sample_32", "Sample_36",
"Sample_67", "Sample_71", "Sample_75", "Sample_16", "Sample_20",
"Sample_24", "Sample_55", "Sample_59", "Sample_63",
"Sample_01_with_DF", "Sample_02_with_DF", "Sample_06_with_DF", "Sample_07_with_DF", "Sample_11_with_DF",
"Sample_12_with_DF", "Sample_40_with_DF", "Sample_41_with_DF", "Sample_45_with_DF", "Sample_46_with_DF",
"Sample_50_with_DF", "Sample_51_with_DF", "Sample_28_with_DF", "Sample_32_with_DF", "Sample_36_with_DF",
"Sample_67_with_DF", "Sample_71_with_DF", "Sample_75_with_DF", "Sample_16_with_DF", "Sample_20_with_DF",
"Sample_24_with_DF", "Sample_55_with_DF", "Sample_59_with_DF", "Sample_63_with_DF")
rs_columns <- c("Sample_03", "Sample_08", "Sample_13", "Sample_42", "Sample_47",
"Sample_52", "Sample_29", "Sample_33", "Sample_37", "Sample_68",
"Sample_72", "Sample_76", "Sample_17", "Sample_21", "Sample_25",
"Sample_56", "Sample_60", "Sample_64",
"Sample_03_with_DF", "Sample_08_with_DF", "Sample_13_with_DF", "Sample_42_with_DF", "Sample_47_with_DF",
"Sample_52_with_DF", "Sample_29_with_DF", "Sample_33_with_DF", "Sample_37_with_DF", "Sample_68_with_DF",
"Sample_72_with_DF", "Sample_76_with_DF", "Sample_17_with_DF", "Sample_21_with_DF", "Sample_25_with_DF",
"Sample_56_with_DF", "Sample_60_with_DF", "Sample_64_with_DF")
ms_columns <- c("Sample_04", "Sample_09", "Sample_14", "Sample_43", "Sample_48",
"Sample_53", "Sample_30", "Sample_34", "Sample_38", "Sample_69",
"Sample_73", "Sample_77", "Sample_18", "Sample_22", "Sample_26",
"Sample_57", "Sample_61", "Sample_65",
"Sample_04_with_DF", "Sample_09_with_DF", "Sample_14_with_DF", "Sample_43_with_DF", "Sample_48_with_DF",
"Sample_53_with_DF", "Sample_30_with_DF", "Sample_34_with_DF", "Sample_38_with_DF", "Sample_69_with_DF",
"Sample_73_with_DF", "Sample_77_with_DF", "Sample_18_with_DF", "Sample_22_with_DF", "Sample_26_with_DF",
"Sample_57_with_DF", "Sample_61_with_DF", "Sample_65_with_DF")
btp_columns <- c("Sample_05", "Sample_10", "Sample_15", "Sample_44", "Sample_49",
"Sample_54", "Sample_31", "Sample_35", "Sample_39", "Sample_70",
"Sample_74", "Sample_78", "Sample_19", "Sample_23", "Sample_27",
"Sample_58", "Sample_62", "Sample_66",
"Sample_05_with_DF", "Sample_10_with_DF", "Sample_15_with_DF", "Sample_44_with_DF", "Sample_49_with_DF",
"Sample_54_with_DF", "Sample_31_with_DF", "Sample_35_with_DF", "Sample_39_with_DF", "Sample_70_with_DF",
"Sample_74_with_DF", "Sample_78_with_DF", "Sample_19_with_DF", "Sample_23_with_DF", "Sample_27_with_DF",
"Sample_58_with_DF", "Sample_62_with_DF", "Sample_66_with_DF")
# Load the data
data <- read.csv(file_path, header = TRUE, row.names = 1)
# Remove columns with all zeros
data <- data[, colSums(data != 0) > 0]
# Separate the groups based on predefined columns
group_hp <- data[, colnames(data) %in% hp_columns]
group_rs <- data[, colnames(data) %in% rs_columns]
group_ms <- data[, colnames(data) %in% ms_columns]
group_btp <- data[, colnames(data) %in% btp_columns]
# Combine groups for analysis
combined_data <- cbind(group_hp, group_rs, group_ms, group_btp)
# Transpose the data to have samples as rows
combined_data_t <- t(combined_data)
# Perform NMDS
nmds <- metaMDS(combined_data_t, distance = "bray", k = 2, trymax = 100)
# Extract NMDS scores (site scores)
nmds_scores <- as.data.frame(scores(nmds, display = "sites"))
# Add group information
nmds_scores$group <- rep(c("HP", "RS", "MS", "BTP"),
c(ncol(group_hp), ncol(group_rs), ncol(group_ms), ncol(group_btp)))
# Add country information
nmds_scores$whole <- ifelse(rownames(nmds_scores) %in% whole_columns, "whole_columns", "whole_columns_with_df")
nmds_plot
# Set the file path
file_path <- "with_df_gtdb_phylum_merged_all.csv"
whole_columns <- c("Sample_01", "Sample_02", "Sample_03", "Sample_04", "Sample_05", "Sample_06", "Sample_07", "Sample_08", "Sample_09", "Sample_10", "Sample_11", "Sample_12", "Sample_13", "Sample_14", "Sample_15", "Sample_16", "Sample_17", "Sample_18", "Sample_19", "Sample_20", "Sample_21", "Sample_22", "Sample_23", "Sample_24", "Sample_25", "Sample_26", "Sample_27", "Sample_28", "Sample_29", "Sample_30", "Sample_31", "Sample_32", "Sample_33", "Sample_34", "Sample_35", "Sample_36", "Sample_37", "Sample_38", "Sample_39", "Sample_40", "Sample_41", "Sample_42", "Sample_43", "Sample_44", "Sample_45", "Sample_46", "Sample_47", "Sample_48", "Sample_49", "Sample_50", "Sample_51", "Sample_52", "Sample_53", "Sample_54", "Sample_55", "Sample_56", "Sample_57", "Sample_58", "Sample_59", "Sample_60", "Sample_61", "Sample_62", "Sample_63", "Sample_64", "Sample_65", "Sample_66", "Sample_67", "Sample_68", "Sample_69", "Sample_70", "Sample_71", "Sample_72", "Sample_73", "Sample_74", "Sample_75", "Sample_76", "Sample_77", "Sample_78")
whole_columns_with_df <- c(paste0(whole_columns, "_with_DF"))
# Define the column patterns for HP, RS, MS, and BTP groups
hp_columns <- c("Sample_01", "Sample_02", "Sample_06", "Sample_07", "Sample_11",
"Sample_12", "Sample_40", "Sample_41", "Sample_45", "Sample_46",
"Sample_50", "Sample_51", "Sample_28", "Sample_32", "Sample_36",
"Sample_67", "Sample_71", "Sample_75", "Sample_16", "Sample_20",
"Sample_24", "Sample_55", "Sample_59", "Sample_63",
"Sample_01_with_DF", "Sample_02_with_DF", "Sample_06_with_DF", "Sample_07_with_DF", "Sample_11_with_DF",
"Sample_12_with_DF", "Sample_40_with_DF", "Sample_41_with_DF", "Sample_45_with_DF", "Sample_46_with_DF",
"Sample_50_with_DF", "Sample_51_with_DF", "Sample_28_with_DF", "Sample_32_with_DF", "Sample_36_with_DF",
"Sample_67_with_DF", "Sample_71_with_DF", "Sample_75_with_DF", "Sample_16_with_DF", "Sample_20_with_DF",
"Sample_24_with_DF", "Sample_55_with_DF", "Sample_59_with_DF", "Sample_63_with_DF")
rs_columns <- c("Sample_03", "Sample_08", "Sample_13", "Sample_42", "Sample_47",
"Sample_52", "Sample_29", "Sample_33", "Sample_37", "Sample_68",
"Sample_72", "Sample_76", "Sample_17", "Sample_21", "Sample_25",
"Sample_56", "Sample_60", "Sample_64",
"Sample_03_with_DF", "Sample_08_with_DF", "Sample_13_with_DF", "Sample_42_with_DF", "Sample_47_with_DF",
"Sample_52_with_DF", "Sample_29_with_DF", "Sample_33_with_DF", "Sample_37_with_DF", "Sample_68_with_DF",
"Sample_72_with_DF", "Sample_76_with_DF", "Sample_17_with_DF", "Sample_21_with_DF", "Sample_25_with_DF",
"Sample_56_with_DF", "Sample_60_with_DF", "Sample_64_with_DF")
ms_columns <- c("Sample_04", "Sample_09", "Sample_14", "Sample_43", "Sample_48",
"Sample_53", "Sample_30", "Sample_34", "Sample_38", "Sample_69",
"Sample_73", "Sample_77", "Sample_18", "Sample_22", "Sample_26",
"Sample_57", "Sample_61", "Sample_65",
"Sample_04_with_DF", "Sample_09_with_DF", "Sample_14_with_DF", "Sample_43_with_DF", "Sample_48_with_DF",
"Sample_53_with_DF", "Sample_30_with_DF", "Sample_34_with_DF", "Sample_38_with_DF", "Sample_69_with_DF",
"Sample_73_with_DF", "Sample_77_with_DF", "Sample_18_with_DF", "Sample_22_with_DF", "Sample_26_with_DF",
"Sample_57_with_DF", "Sample_61_with_DF", "Sample_65_with_DF")
btp_columns <- c("Sample_05", "Sample_10", "Sample_15", "Sample_44", "Sample_49",
"Sample_54", "Sample_31", "Sample_35", "Sample_39", "Sample_70",
"Sample_74", "Sample_78", "Sample_19", "Sample_23", "Sample_27",
"Sample_58", "Sample_62", "Sample_66",
"Sample_05_with_DF", "Sample_10_with_DF", "Sample_15_with_DF", "Sample_44_with_DF", "Sample_49_with_DF",
"Sample_54_with_DF", "Sample_31_with_DF", "Sample_35_with_DF", "Sample_39_with_DF", "Sample_70_with_DF",
"Sample_74_with_DF", "Sample_78_with_DF", "Sample_19_with_DF", "Sample_23_with_DF", "Sample_27_with_DF",
"Sample_58_with_DF", "Sample_62_with_DF", "Sample_66_with_DF")
# Define the column patterns for DK, SP, and UK groups
dk_columns <- c("Sample_01", "Sample_02", "Sample_03", "Sample_04", "Sample_06",
"Sample_07", "Sample_08", "Sample_09", "Sample_11", "Sample_12",
"Sample_13", "Sample_14", "Sample_40", "Sample_41", "Sample_42",
"Sample_43", "Sample_45", "Sample_46", "Sample_47", "Sample_48",
"Sample_50", "Sample_51", "Sample_52", "Sample_53", "Sample_05",
"Sample_10", "Sample_15", "Sample_44", "Sample_49", "Sample_54",
"Sample_01_with_DF", "Sample_02_with_DF", "Sample_03_with_DF", "Sample_04_with_DF", "Sample_06_with_DF",
"Sample_07_with_DF", "Sample_08_with_DF", "Sample_09_with_DF", "Sample_11_with_DF", "Sample_12_with_DF",
"Sample_13_with_DF", "Sample_14_with_DF", "Sample_40_with_DF", "Sample_41_with_DF", "Sample_42_with_DF",
"Sample_43_with_DF", "Sample_45_with_DF", "Sample_46_with_DF", "Sample_47_with_DF", "Sample_48_with_DF",
"Sample_50_with_DF", "Sample_51_with_DF", "Sample_52_with_DF", "Sample_53_with_DF", "Sample_05_with_DF",
"Sample_10_with_DF", "Sample_15_with_DF", "Sample_44_with_DF", "Sample_49_with_DF", "Sample_54_with_DF")
sp_columns <- c("Sample_28", "Sample_29", "Sample_30", "Sample_32", "Sample_33",
"Sample_34", "Sample_36", "Sample_37", "Sample_38", "Sample_67",
"Sample_68", "Sample_69", "Sample_71", "Sample_72", "Sample_73",
"Sample_75", "Sample_76", "Sample_77", "Sample_31", "Sample_35",
"Sample_39", "Sample_70", "Sample_74", "Sample_78",
"Sample_28_with_DF", "Sample_29_with_DF", "Sample_30_with_DF", "Sample_32_with_DF", "Sample_33_with_DF",
"Sample_34_with_DF", "Sample_36_with_DF", "Sample_37_with_DF", "Sample_38_with_DF", "Sample_67_with_DF",
"Sample_68_with_DF", "Sample_69_with_DF", "Sample_71_with_DF", "Sample_72_with_DF", "Sample_73_with_DF",
"Sample_75_with_DF", "Sample_76_with_DF", "Sample_77_with_DF", "Sample_31_with_DF", "Sample_35_with_DF",
"Sample_39_with_DF", "Sample_70_with_DF", "Sample_74_with_DF", "Sample_78_with_DF")
uk_columns <- c("Sample_16", "Sample_17", "Sample_18", "Sample_20", "Sample_21",
"Sample_22", "Sample_24", "Sample_25", "Sample_26", "Sample_55",
"Sample_56", "Sample_57", "Sample_59", "Sample_60", "Sample_61",
"Sample_63", "Sample_64", "Sample_65", "Sample_19", "Sample_23",
"Sample_27", "Sample_58", "Sample_62", "Sample_66",
"Sample_16_with_DF", "Sample_17_with_DF", "Sample_18_with_DF", "Sample_20_with_DF", "Sample_21_with_DF",
"Sample_22_with_DF", "Sample_24_with_DF", "Sample_25_with_DF", "Sample_26_with_DF", "Sample_55_with_DF",
"Sample_56_with_DF", "Sample_57_with_DF", "Sample_59_with_DF", "Sample_60_with_DF", "Sample_61_with_DF",
"Sample_63_with_DF", "Sample_64_with_DF", "Sample_65_with_DF", "Sample_19_with_DF", "Sample_23_with_DF",
"Sample_27_with_DF", "Sample_58_with_DF", "Sample_62_with_DF", "Sample_66_with_DF")
# Load the data
data <- read.csv(file_path, header = TRUE, row.names = 1)
# Remove columns with all zeros
data <- data[, colSums(data != 0) > 0]
# Separate the groups based on predefined columns
group_hp <- data[, colnames(data) %in% hp_columns]
group_rs <- data[, colnames(data) %in% rs_columns]
group_ms <- data[, colnames(data) %in% ms_columns]
group_btp <- data[, colnames(data) %in% btp_columns]
# Combine groups for analysis
combined_data <- cbind(group_hp, group_rs, group_ms, group_btp)
# Transpose the data to have samples as rows
combined_data_t <- t(combined_data)
# Perform NMDS
nmds <- metaMDS(combined_data_t, distance = "bray", k = 2, trymax = 100)
# Extract NMDS scores (site scores)
nmds_scores <- as.data.frame(scores(nmds, display = "sites"))
# Add group information
nmds_scores$group <- rep(c("HP", "RS", "MS", "BTP"),
c(ncol(group_hp), ncol(group_rs), ncol(group_ms), ncol(group_btp)))
# Add country information
nmds_scores$country <- rep("", nrow(nmds_scores))
nmds_scores$country[rownames(nmds_scores) %in% dk_columns] <- "DK"
nmds_scores$country[rownames(nmds_scores) %in% sp_columns] <- "SP"
nmds_scores$country[rownames(nmds_scores) %in% uk_columns] <- "UK"
# Add whole_columns and whole_columns_with_df information
nmds_scores$whole <- ifelse(rownames(nmds_scores) %in% whole_columns, "whole_columns", "whole_columns_with_df")
# Function to generate ellipse points for confidence intervals
veganCovEllipse <- function(cov, center, scale) {
library(MASS)
angles <- seq(0, 2 * pi, length.out = 100)
unit_circle <- cbind(cos(angles), sin(angles))
ellipse <- t(center + scale * t(unit_circle %*% chol(cov)))
return(data.frame(NMDS1 = ellipse[,1], NMDS2 = ellipse[,2]))
}
# Calculate confidence ellipses
ellipse_list <- list()
for (g in unique(nmds_scores$group)) {
for (w in unique(nmds_scores$whole)) {
group_data <- nmds_scores[nmds_scores$group == g & nmds_scores$whole == w, c("NMDS1", "NMDS2")]
if (nrow(group_data) > 2) {  # Ensure there are enough points to calculate ellipse
ell <- data.frame(veganCovEllipse(cov(group_data), center = colMeans(group_data), scale = 0.95))
ell$group <- g
ell$whole <- w
ellipse_list[[paste(g, w, sep = "_")]] <- ell
}
}
}
conf_intervals <- do.call(rbind, ellipse_list)
# Perform ANOSIM
group_factor <- factor(nmds_scores$group)
anosim_result <- anosim(combined_data_t, group_factor, distance = "bray")
# Create annotation text for ANOSIM results
anosim_text <- paste("ANOSIM R:", round(anosim_result$statistic, 3), "\np-value:", format(anosim_result$signif, scientific = TRUE))
# Plot NMDS
nmds_plot <- ggplot() +
# Add points
geom_point(data = nmds_scores, aes(x = NMDS1, y = NMDS2, color = whole, shape = country), size = 3) +
# Add confidence ellipses
geom_path(data = conf_intervals, aes(x = NMDS1, y = NMDS2, color = whole, group = interaction(group, whole)), linetype = 2) +
scale_color_manual(values = c("whole_columns" = "#6566aa", "whole_columns_with_df" = "#dc5772"),
name = "Whole",
breaks = c("whole_columns", "whole_columns_with_df")) +
scale_shape_manual(values = c("DK" = 21, "SP" = 22, "UK" = 23), name = "Country") +
theme_bw() +
labs(x = "NMDS1", y = "NMDS2") +
annotate("text", x = min(nmds_scores$NMDS1), y = max(nmds_scores$NMDS2),
label = anosim_text, hjust = 0, vjust = 1, size = 6, fontface = "bold") +
theme(
axis.title.x = element_text(size = 14, face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size = 12, face = "italic"),
axis.text.y = element_text(size = 12, face = "italic")
)
# Save NMDS plot as PDF
ggsave("with_df_gtdb_phylum_nmds.pdf", plot = nmds_plot, device = "pdf", width = 9, height = 8)
nmds_scores
View(nmds_scores)
View(veganCovEllipse)
